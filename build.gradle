/**
 *
 * How to use:
 *
 *  1) ./gradlew uploadArchives
 *  3) ./gradlew closeAndReleaseRepository
 *
 *
 * Optional steps:
 *
 *  2) ./gradlew getStagingProfile  diagnostic task, get stagingProfileId
 *  3) ./gradlew closeRepository    check errors on https://oss.sonatype.org/#stagingRepositories
 *  4) ./gradlew releaseRepository  publish to https://search.maven.org/search?q=himalaya
 *
 *
 *
 * increase gradle
 * 	./gradlew wrapper --gradle-version=5.5-rc-1
 *
 * */


plugins {
    id 'java'
    id 'base'
    id 'java-library'
    //id 'distribution'
    //id 'application'
    id 'idea'
    // id 'com.ewerk.gradle.plugins.auto-value' version '1.0.8'
    id 'com.dorongold.task-tree' version '1.4' /* ./gradlew -q build taskTree */
    id 'com.github.ben-manes.versions' version '0.21.0' /* ./gradlew -q dependencyUpdates */

    id 'com.bmuschko.nexus' version '2.3.1'
    id 'io.codearte.nexus-staging' version '0.21.0'

    id "io.freefair.lombok" version "3.6.6"
    id "io.spring.dependency-management" version "1.0.7.RELEASE"

    //id "com.dua3.gradle.jpms" version "0.8.3"
    id "org.javamodularity.moduleplugin" version "1.5.0"
}


println "name:      $archivesBaseName"
println "group:     " + project.getGroup()
println "version:   $version"


java {
    sourceCompatibility = JavaVersion.VERSION_12 //VERSION_11
    targetCompatibility = JavaVersion.VERSION_12
}


jar {
    manifest {
        attributes('Implementation-Title':project.name,
                   'Implementation-Version':project.version)
                   //'Contains-Sources':'java,class')
    }
}

////////////////////////////// spring framework //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

dependencyManagement {
    imports {
        mavenBom "io.projectreactor:reactor-bom:Californium-SR8"
    }
}

test {
    useJUnitPlatform()
}

////////////////////////////// lombok //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//lombok.config[''] = ''
lombok.config[ 'lombok.log.fieldName' ] = 'logger_'
lombok.config[ 'lombok.toString.includeFieldNames' ] = 'false'
lombok.config[ 'lombok.toString.callSuper' ] = 'call'
lombok.config[ 'lombok.singular.useGuava' ] = 'true'


////////////////////////////// manifold //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//tasks.withType(JavaCompile) {
//    options.compilerArgs += '-Xplugin:Manifold strings exceptions'
//    options.fork = true
//}


repositories {
    mavenCentral()
}

dependencies {


    //@NotNull annotations exposed in library public api
    api 'org.jetbrains:annotations:17.0.0'                  //API


    // implementation 'com.google.flogger:flogger:0.4'
    //runtimeOnly 'com.google.flogger:flogger-system-backend:0.4'

    implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
    testImplementation 'ch.qos.logback:logback-classic:1.3.0-alpha4'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.0-M1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.0-M1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.0-M1'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'com.google.truth:truth:0.45'


    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-collections4:4.3'
    //implementation 'org.apache.commons:commons-configuration2:2.4'
    implementation 'commons-io:commons-io:2.6'

    implementation 'com.google.guava:guava:27.1-jre'
    implementation 'com.google.code.gson:gson:2.8.5'


    api 'com.oath.cyclops:cyclops:10.3.0'                    //API
    api 'io.vavr:vavr:0.10.0'                                //API
    compileOnly 'io.vavr:vavr-match:0.10.0'
    annotationProcessor 'io.vavr:vavr-match-processor:0.10.0'
    //implementation 'com.github.ben-manes.caffeine:caffeine:2.6.2'
    //implementation 'io.reactivestreams.rxjava2:rxjava:2.2.7'


//    implementation  'systems.manifold:manifold-all:2019.1.0-gw'          //API
//    annotationProcessor  'systems.manifold:manifold-all:2019.1.0-gw'
//    testImplementation  'systems.manifold:manifold-all:22019.1.0-gw'
//    testAnnotationProcessor  'systems.manifold:manifold-all:2019.1.0-gw'

//    implementation  'systems.manifold:manifold:2019.1.0-gw'          //API
//    annotationProcessor  'systems.manifold:manifold:2019.1.0-gw'
//    testImplementation  'systems.manifold:manifold:22019.1.0-gw'
//    testAnnotationProcessor  'systems.manifold:manifold:2019.1.0-gw'
//    implementation  'systems.manifold:manifold-ext:2019.1.0-gw'          //API
//    annotationProcessor  'systems.manifold:manifold-ext:2019.1.0-gw'
//    testImplementation  'systems.manifold:manifold-ext:22019.1.0-gw'
//    testAnnotationProcessor  'systems.manifold:manifold-ext:2019.1.0-gw'


    api "io.projectreactor:reactor-core"                      //API
    testImplementation "io.projectreactor:reactor-test"
    api "io.projectreactor.addons:reactor-extra"
    ////runtimeOnly "io.projectreactor.addons:reactor-logback"  //// superlog with ring buffer


}


/** https://github.com/bmuschko/gradle-nexus-plugin/
 The Nexus plugin can add three tasks to your project:
 •!	uploadArchives tasks
 •	javadocJar: Assembles a jar archive containing the generated Javadoc API documentation of this project (added by default).
 •	sourcesJar: Assembles a jar archive containing the main sources of this project (added by default).
 •	testsJar: Assembles a jar archive containing the test sources of this project.
 The output of all tasks is added to the archives configuration. To tell the plugin that any of these tasks should be added to the project or removed, you will need to set a specific extension property.
 Additionally, it applies the Maven plugin as well as signing in order to leverage maven's install and uploadArchives tasks.
 */

modifyPom {
    project {
        name 'Hymalaya Framework'
        description 'The library contains additional methods not included in guava, apache commons (for example, checking collections, etc).'
        url 'https://github.com/wilmerkrisp/himalaya'
        inceptionYear '2019'

        scm {
            url 'https://github.com/wilmerkrisp/himalaya'
            connection 'scm:git:git://github.com/wilmerkrisp/himalaya.git'
            developerConnection 'scm:git:ssh://git@github.com:wilmerkrisp/himalaya.git'
        }

        licenses {
            license {
                name 'CC BY License 4.0'
                url 'https://github.com/wilmerkrisp/himalaya/blob/master/LICENSE'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'wilmerkrisp'
                name 'Wilmer Krisp'
                email 'wilmer.krisp@yahoo.com'
            }
        }
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
    description = project.getGroup() + ' uploaded'
}


/** https://github.com/Codearte/gradle-nexus-staging-plugin/
 •	closeRepository - closes an open repository with the uploaded artifacts. There should be just one open repository available in the staging profile (possible old/broken repositories can be dropped with Nexus GUI)
 •	releaseRepository - releases a closed repository (required to put artifacts to Maven Central aka The Central Repository)
 •	closeAndReleaseRepository - closes and releases a repository (an equivalent to closeRepository releaseRepository)
 */
nexusStaging {
    // optional if packageGroup == project.getGroup()
    //packageGroup = "life.expert"

    // when not defined will be got from server using "packageGroup"
    ////stagingProfileId = "8a6d45bdff93c4"
    //stagingProfileId = "7edbe315063867"

    // Dealing with error "Wrong number of received repositories in state 'open'" (http://bit.ly/2ybracm)
    numberOfRetries = 50
    delayBetweenRetriesInMillis = 3000

    repositoryDescription = project.getGroup() + ' published'
    ////stagingRepositoryId='central_bundles-16148'
}

